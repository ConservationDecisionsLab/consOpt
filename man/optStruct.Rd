% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimization.R
\docType{data}
\name{optStruct}
\alias{optStruct}
\title{This should just be the strategy names, like "S12" -> c("S6", "S7", "S10")}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
optStruct
}
\arguments{
\item{input.strategies}{A named list denoting strategy names, e.g. list(strategy1="S1", strategy2="S2", ...)}

\item{combined.strategies}{A list of lists denoting strategy names that are combined, e.g. list(strategy1=c("S5", "S6", "S7"), strategy2=c("S6", "S7", "S8"))}

\item{weights}{A list of integers. Must have a number for each species in the benefits matrix.}

\item{budget}{A number}

\item{t}{A number}

\item{results}{An OMPR solution object}

\item{budget}{A number}
}
\value{
Silently updates the benefits matrix and the cost vector

A result container
Map strategy selection constraints to their indeces in the benefits matrix/cost vector

A list of constraint objects

Returns the "results" from only running the baseline strategy

A list holding the results
Rounds the B matrix, check if B is labelled

Updates self$B
Thresholds the B matrix, binarizing the entries

Modifies the B matrix in place
Count up the species saved by the baseline strategy, then remove it;
These species are buffered and are added freely to nontrivial strategies at results time
B is mutated by removing the baseline strategy, and the all_index is decremented

Updates private$baseline.results
Convert the optimization results into something human readable

A list compiling the results of the optimization
Solves the ILP given a budget

A list of results
}
\description{
This should just be the strategy names, like "S12" -> c("S6", "S7", "S10")
}
\examples{

The benefits matrix might contain strategies which are combinations of several strategies (called compound strategies). The joint selection of these strategies
will be artificially expensive if two compound strategies contain one or more of the same individual strategy, as the cost will be doubled
E.g.: Strategy S12 is a combination of strategies S3, S7, and S10.
      Strategy S13 is a combination of strategies S6, S9, and S10
Selecting strategies S12 and S13 simultaneously will erronously count the cost of S10 twice, making this combination less favorable to the objective function.

TODO This function is a goddamn travesty and should be refactored...


}
\keyword{datasets}
